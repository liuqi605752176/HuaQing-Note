char     signed -128~127  unsigned 0~255
short
int
long     32  4个字节   64 8个字节

float
double


auto   只能修饰局部变量
register
static  1.修饰全局变量限定作用域     2.修饰局部变量改变存储位置,延长生命周期
extern


有符号数与无符号数运算时  有符号转换成无符号数

内存分段

运算符:
算术         ++a先运算后赋值   a++ 先赋值后运算          a++ + ++a + a++
关系
逻辑
位           & ~ | ^ >> <<
特殊         ?       ,   (表达式1,表达式2,表达式3);        sizeof

运算符优先级问题

if

switch

while

for

break
continue
goto
return

数组:
1.数组是变量的有序集合
2.数组内所有元素的类型保持一致

排序:
冒泡
简单选择排序

字符数组与字符指针需要注意

const:   把变量常量化
const int *p     修饰*p    代表不能通过指针p对指向空间中的值进行修改  p的指向能改变
int const *p

int* const p     修饰p   指针p指向不能改变    能通过指针p对指向空间中的值进行修改

const int *const p 两者都不能修改

main -> const char * argv[]    const修饰指针指向的内容只读

volatile
防止代码被编译器过度优化,变量随时会发生改变,要求每次使用时去内存上取变量
1.并行设备的寄存器   2.多线程共享的全局变量  3.中断函数子程序 访问的非自动变量


define
#define   标识符    被替换的目标
本质:字符串的整体替换
写一个宏函数比较a,b,输出a,b中小的那一个

typedef

指针类型为4个字节   32位


奇怪的形式:
int a[] = {1,2,3,4,5};
printf("%d\n",2[a]);
//2[a] --- > a[2] ---> *(a+2)

结构体内部对齐
struct a
{

};
sizeof(struct a);
结构体内没有成员时默认大小为1
当前编译器大小为0
